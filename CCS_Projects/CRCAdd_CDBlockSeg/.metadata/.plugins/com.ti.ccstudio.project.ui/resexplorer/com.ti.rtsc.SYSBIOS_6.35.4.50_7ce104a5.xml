<?xml version="1.0" encoding="UTF-8"?>

<resource.explorer version="1.0" name="SYS/BIOS" dir="" href="http://processors.wiki.ti.com/index.php/Category:SYSBIOS">

    <content name="Release Notes" href="C:/ti/bios_6_35_04_50/Bios_6_35_04_50_release_notes.html">
	<type>weblink</type>
    </content>
    <content name="Getting Started Guide" href="C:/ti/bios_6_35_04_50/docs/Bios_Getting_Started_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Users Guide" href="C:/ti/bios_6_35_04_50/docs/Bios_User_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Legacy Applications note" href="C:/ti/bios_6_35_04_50/docs/Bios_Legacy_App_Note.pdf">
	<type>weblink</type>
    </content>
	<contents name="C6000" desc="C6000" icon="plugin://icons/obj16/devices.png">
		<contents name="Generic devices" desc="Generic devices" icon="plugin://icons/obj16/devices.png">
			<contents name="Generic C64x+ Device" desc="Generic C64x+ Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821481778822">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821481778822"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821481778822"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821486914006">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821486914006"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C66xx Device" desc="Generic C66xx Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821489752298">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821489752298"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821489752298"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821490205176">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821490205176"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C674x Device" desc="Generic C674x Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821498938152">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821498938152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821498938152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821499465441">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821499465441"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C645x High Performance DSP" desc="C645x High Performance DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="DSK6455" desc="DSK6455" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821519660636">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSK6455</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821519660636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821519660636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821524781280">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSK6455</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821524781280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSK6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.DSK6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVM6455 (TMS320C6455)" desc="EVM6455 (TMS320C6455)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821526378541">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVM6455 (TMS320C6455)</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821526378541"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821526378541"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821526580390">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVM6455 (TMS320C6455)</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821526580390"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVM6455_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455.EVM6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6457 (TMS320C6457)" desc="EVMC6457 (TMS320C6457)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821527795762">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6457 (TMS320C6457)</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821527795762"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821527795762"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821527986065">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6457 (TMS320C6457)</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821527986065"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6457_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.EVMC6457"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMDSEVM6457L" desc="TMDSEVM6457L" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821529909193">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6457L</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821529909193"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821529909193"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821530343255">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6457L</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821530343255"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMDSEVM6457L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457.TMDSEVM6457L"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6452" desc="TMS320C6452" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821531849854">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6452</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821531849854"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821531849854"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821532141510">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6452</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821532141510"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6452"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6452"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6454" desc="TMS320C6454" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821534310107">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6454</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821534310107"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821534310107"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821534606466">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6454</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821534606466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6454"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6454"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6455" desc="TMS320C6455" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821536600583">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6455</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821536600583"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821536600583"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821536881547">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6455</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821536881547"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6455"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6455"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6457" desc="TMS320C6457" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821538818788">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6457</tag>
					<tag>C645x High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821538818788"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821538818788"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821539095903">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6457</tag>
					<tag>C645x High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821539095903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6457"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6457"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C64xx Multicore DSP" desc="C64xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6472" desc="EVMC6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821545567483">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821545567483"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821545567483"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821545975885">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821545975885"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMDSEVM6474L" desc="TMDSEVM6474L" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821547928949">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821547928949"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821547928949"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821548126094">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821548126094"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6472" desc="TMS320C6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821549279030">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821549279030"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821549279030"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821549592495">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821549592495"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6474" desc="TMS320C6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821550730891">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821550730891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821550730891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821550898528">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821550898528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6486" desc="TMS320TCI6486" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821552042911">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821552042911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821552042911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821552219102">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821552219102"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6487" desc="TMS320TCI6487" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821553395131">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821553395131"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821553395131"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821553711589">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821553711589"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6488" desc="TMS320TCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821555359740">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821555359740"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821555359740"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821555531227">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821555531227"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C66xx Multicore DSP" desc="C66xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="TCI6608" desc="TCI6608" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821559729008">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821559729008"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821559729008"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821560016815">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821560016815"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6614" desc="TCI6614" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821561951917">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821561951917"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821561951917"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821562234164">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821562234164"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6616" desc="TCI6616" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821564147456">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821564147456"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821564147456"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821564365555">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821564365555"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6618" desc="TCI6618" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821566251906">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821566251906"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821566251906"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821566557246">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821566557246"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6654" desc="TMS320C6654" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821568537678">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821568537678"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821568537678"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821568840452">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821568840452"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6655" desc="TMS320C6655" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821570596370">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821570596370"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821570596370"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821570912401">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821570912401"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6657" desc="TMS320C6657" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821572939875">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821572939875"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821572939875"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821573235807">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821573235807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6670" desc="TMS320C6670" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821577880051">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821577880051"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821577880051"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821578043412">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821578043412"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6671" desc="TMS320C6671" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821579046244">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821579046244"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821579046244"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821579193355">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821579193355"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6672" desc="TMS320C6672" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821580153850">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821580153850"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821580153850"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821580377081">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821580377081"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6674" desc="TMS320C6674" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821581978191">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821581978191"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821581978191"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821582227937">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821582227937"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6678" desc="TMS320C6678" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821583909872">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821583909872"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821583909872"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821584180573">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821584180573"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C674x Floating-point DSP" desc="C674x Floating-point DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6747" desc="EVMC6747" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821598686354">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6747</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821598686354"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821598686354"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821598856130">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6747</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821598856130"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747.EVMC6747"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6748" desc="EVMC6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821599845705">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821599845705"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821599845705"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821599996236">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821599996236"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.EVMC6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="LCDKC6748" desc="LCDKC6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821603830946">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821603830946"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821603830946"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821604001149">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>LCDKC6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821604001149"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_LCDKC6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748.LCDKC6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6742" desc="TMS320C6742" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821605017666">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6742</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821605017666"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821605017666"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821605166487">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6742</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821605166487"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6742"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6742"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6743" desc="TMS320C6743" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821610803728">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6743</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821610803728"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821610803728"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821610982056">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6743</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821610982056"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6743"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6743"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6745" desc="TMS320C6745" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821611978901">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6745</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821611978901"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821611978901"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821612127295">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6745</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821612127295"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6745"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6745"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6746" desc="TMS320C6746" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821613092494">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6746</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821613092494"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821613092494"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821613247302">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6746</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821613247302"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6746"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6746"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6747" desc="TMS320C6747" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821614288622">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6747</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821614288622"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821614288622"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821614446423">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6747</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821614446423"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6747"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6747"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6748" desc="TMS320C6748" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821615582681">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6748</tag>
					<tag>C674x Floating-point DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821615582681"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821615582681"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821615871343">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6748</tag>
					<tag>C674x Floating-point DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821615871343"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6748"/>
							<attribute key="device.variant" value="TMS320C67XX.TMS320C6748"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TCI High Performance DSP" desc="TCI High Performance DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="DSKTCI6482" desc="DSKTCI6482" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821617929179">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKTCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821617929179"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821617929179"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821618217841">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>DSKTCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821618217841"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_DSKTCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.DSKTCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6482 (TMS320TCI6482)" desc="EVMTCI6482 (TMS320TCI6482)" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821620017807">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6482 (TMS320TCI6482)</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821620017807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821620017807"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821620306468">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6482 (TMS320TCI6482)</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821620306468"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6482_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482.EVMTCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6482" desc="TMS320TCI6482" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821627119738">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821627119738"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821627119738"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821627354089">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6482</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821627354089"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6482"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6482"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6484" desc="TMS320TCI6484" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821628337676">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6484</tag>
					<tag>TCI High Performance DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821628337676"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821628337676"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821628488636">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6484</tag>
					<tag>TCI High Performance DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821628488636"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6484"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6484"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C64XX" desc="TMS320C64XX" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6424" desc="EVMC6424" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821629681770">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6424</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821629681770"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821629681770"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821629842138">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6424</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821629842138"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424.EVMC6424"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMC6474" desc="EVMC6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821630918097">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821630918097"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821630918097"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821631119091">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821631119091"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6488" desc="EVMTCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821632184787">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821632184787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821632184787"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821632367393">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821632367393"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6421" desc="TMS320C6421" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821634125021">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6421</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821634125021"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821634125021"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821634342266">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6421</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821634342266"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6421"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6421"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6424" desc="TMS320C6424" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821635743665">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6424</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821635743665"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821635743665"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821635901894">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6424</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821635901894"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6424"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6424"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C66XX" desc="TMS320C66XX" icon="plugin://icons/obj16/devices.png">
			<contents name="66AK2H06" desc="66AK2H06" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821641829507">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821641829507"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821641829507"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821642023231">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821642023231"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="66AK2H12" desc="66AK2H12" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821643038465">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821643038465"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821643038465"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821643183437">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821643183437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6634K2K" desc="TCI6634K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821644412494">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821644412494"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821644412494"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821644667799">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821644667799"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6636K2H" desc="TCI6636K2H" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821645620169">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821645620169"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821645620169"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821645764286">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821645764286"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6638K2K" desc="TCI6638K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_4821647301676">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_4821647301676"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_35_04_50\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_4821647301676"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_4821647583068">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_35_04_50\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_4821647583068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>

</resource.explorer>
